# Common top-level ("main context") nginx config: /etc/nginx/nginx.conf
# https://launchpad.net/~nginx/+archive/ubuntu/stable?field.series_filter=bionic

user www-data;
pid /run/nginx.pid;

worker_processes auto;
worker_cpu_affinity auto;

pcre_jit on;

events {
    multi_accept on;
    worker_connections 20000;
}

http {
    server_tokens off;

    access_log off;
    # TODO: Figure out how to remove the timestamps from these messages, because journald already adds timestamps.
    # access_log syslog:server=unix:/dev/log;
    error_log syslog:server=unix:/dev/log;

    types_hash_max_size 2048;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    ssl_session_cache shared:SSL:20m;
    ssl_session_timeout 10m;
    ssl_prefer_server_ciphers on;
    ssl_session_tickets off;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;

    aio threads; # https://www.nginx.com/blog/thread-pools-boost-performance-9x/
    aio_write on;
    directio 512;
    output_buffers 1 128k;
    sendfile_max_chunk 512k;

    # TODO: Use one gzip config file for browser based access and another for server <--> server (proxy_pass) based access?
    gzip on;
    gzip_min_length 256;
    gzip_comp_level 6;
    gzip_proxied any;
    gzip_types text/css text/javascript text/xml text/plain text/x-component application/javascript application/x-javascript application/json application/xml application/rss+xml application/atom+xml font/truetype font/opentype application/vnd.ms-fontobject image/svg+xml text/event-stream application/octet-stream;

    resolver 1.1.1.1 8.8.8.8 8.8.4.4;
    resolver_timeout 15s;

    keepalive_timeout 75s;
    reset_timedout_connection on;
    client_body_timeout 25s;
    client_header_timeout 25s;
    send_timeout 60s;

    proxy_http_version 1.1;
    proxy_set_header Connection "";
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_socket_keepalive on;
    proxy_connect_timeout 25s;
    proxy_read_timeout 60s;
    proxy_send_timeout 60s;
    proxy_buffering off; # SSE and WebSocket streams with low traffic works better without this.

    # Cache but force revalidation (304) of all resources. I.e. "Cache-Control: no-cache" ( https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control#Requiring_revalidation ).
    expires -1;
    if_modified_since before; # Seems this is also needed lately. - lnostdal 2021-11-3

    absolute_redirect off; # Redirects should be made relative in terms of the client; not based on what nginx backend happens to see.

    # open_file_cache max=200000 inactive=20s; # Can be annoying during development; leaving it disabled.
    # open_file_cache_valid 30s;
    # open_file_cache_min_uses 2;
    # open_file_cache_errors on;

    include /etc/nginx/conf.d/*.conf;
    include /etc/nginx/sites-enabled/*;
}
